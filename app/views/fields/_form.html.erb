<%= form_for(@field) do |f| %>
    <% if @field.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(@field.errors.count, "error") %> prohibited this field from being saved:</h2>

          <ul>
            <% @field.errors.full_messages.each do |message| %>
                <li><%= message %></li>
            <% end %>
          </ul>
        </div>
    <% end %>
    </br>
    <%= f.label :name %>
    <%= f.text_field :name %>
    <%= f.hidden_field :shape %>
    </br>
    <div class="actions">
      <%= f.submit %>
    </div>
<% end %>
</br>
<div id="map"></div>
<script type='text/javascript'>

    //var cloudmadeUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'

    var map = L.map('map').setView([51.505, -0.09], 13);

    // add an OpenStreetMap tile layer
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    bounds = <%= @field.leaflet_shape[:geometry][:coordinates][0] %>;
    if (bounds != []) {
        polygon = L.polygon(bounds).addTo(map);

        // Initialise the FeatureGroup to store editable layers
        var drawnItems = new L.FeatureGroup([polygon]);
    }
    else {
        // Initialise the FeatureGroup to store editable layers
        var drawnItems = new L.FeatureGroup();

    }

    // Initialise the FeatureGroup to store editable layers
    map.addLayer(drawnItems);


    // Initialise the draw control and pass it the FeatureGroup of editable layers
    var drawControl = new L.Control.Draw({
        draw: {
            marker:     false,
            circle:     false,
            polyline:   false,
            polygon: {
                shapeOptions: {
                    color: '#009933'
                }
            }
        },
        edit: {
            featureGroup: drawnItems,
            <% unless @field.new_record? %>
            remove: false
            <% end %>
        }
    });

    map.addControl(drawControl);
    map.fitBounds(bounds);
</script>
